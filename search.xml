<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Masonry 比例设置multipliedBy与dividedBy区别</title>
      <link href="/2020/07/17/Masonry%E7%BA%A6%E6%9D%9FdividedBy%E4%B8%8Emultiplied/"/>
      <url>/2020/07/17/Masonry%E7%BA%A6%E6%9D%9FdividedBy%E4%B8%8Emultiplied/</url>
      
        <content type="html"><![CDATA[<p>multipliedBy与dividedBy相对于视图(自身或者other视图)设置比例约束</p><a id="more"></a><h2 id="multipliedBy"><a href="#multipliedBy" class="headerlink" title="multipliedBy"></a>multipliedBy</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[view mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make.width.equalTo(@<span class="number">100</span>);</span><br><span class="line">    make.height.equalTo(view.mas_height).dividedBy(<span class="number">0.5</span>); <span class="comment">// 高度 = width * 0.5</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure><h2 id="dividedBy"><a href="#dividedBy" class="headerlink" title="dividedBy"></a>dividedBy</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[view mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">    make.height.equalTo(view.mas_width).dividedBy(<span class="number">0.5</span>); <span class="comment">// 高度 = width / 0.5</span></span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Masonry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UNIX</title>
      <link href="/2020/06/29/UNIX/"/>
      <url>/2020/06/29/UNIX/</url>
      
        <content type="html"><![CDATA[<p>本文为阅读《UNIX环境高级编程》一书的笔记。主要是从操作系统起步为了更加理解计算机的原理。</p><a id="more"></a><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><p>所有操作系统都为它们所运行的程序提供服务，典型的服务包括：执行新程序、打开文件、读文件、分配存储区以及获得当前时间等。</p><p>从严格意义上说，可将操作系统定义为一种软件，它控制计算机硬件资源，提供程序运行环境。我们通常将这种软件称为内核（kernel），因为它相对较小，而且位于环境的核心。</p><p>内核的接口被称为系统调用（system call）。公用函数库构建在系统调用接口之上，应用程序既可使用公用函数库，也可使用系统调用。shell 是一个特殊的应用程序，为运行其他应用程序提供了一个接口。</p><img src='/images/Snipaste_2020-07-23_23-12-33.png' style='width:300px'><p>Linux是GNU操作系统使用的内核。一些人将这种操作系统称为<a href="https://blog.csdn.net/lbb88888888/article/details/102954924" target="_blank" rel="noopener">GNU/Linux</a>操作系统，但是，更常见的是简单地称其为 Linux</p><p><a href="http://c.biancheng.net/view/707.html" target="_blank" rel="noopener">Linux和UNIX的关系及区别</a></p><h2 id="进程与线程"><a href="#进程与线程" class="headerlink" title="进程与线程"></a>进程与线程</h2><p>程序（program）是一个存储在磁盘上某个目录中的可执行文件。内核使用exec函数（7个exec函数之一），将程序读入内存，并执行程序</p><p>程序的执行实例被称为进程（process）UNIX系统确保每个进程都有一个唯一的数字标识符，称为进程ID（process ID）。进程 ID总是一个非负整数。</p><h2 id="系统调用和库函数"><a href="#系统调用和库函数" class="headerlink" title="系统调用和库函数"></a>系统调用和库函数</h2><p>所有的操作系统都提供多种服务的入口点，由此程序向内核请求服务。各种版本的UNIX实现都提供良好定义、数量有限、直接进入内核的入口点，这些入口点被称为系统调用</p><p>UNIX所使用的技术是为每个系统调用在标准C库中设置一个具有同样名字的函数。用户进程用标准C调用序列来调用这些函数，然后，函数又用系统所要求的技术调用相应的内核服务。</p><p>“例如，printf 函数会调用write系统调用以输出一个字符串，但函数strcpy（复制一个字符串）和atoi（将ASCII转换为整数）并不使用任何内核的系统调用。</p><p>从实现者的角度来看，系统调用和库函数之间有根本的区别，但从用户角度来看，其区别并不重要。</p><p>系统调用和库函数之间的另一个差别是：系统调用通常提供一种最小接口，而库函数通常提供比较复杂的功能。</p><img src='/images/Snipaste_2020-07-23_23-53-32.png' style='width:300px'><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>Linux是一种提供类似于UNIX的丰富编程环境的操作系统，在GNU公用许可证的指导下， Linux是免费使用的。<br>Linux的普及是计算机产业中的一道亮丽风景线。Linux经常是支持较新硬件的第一个操作系统，这一点使其引人注目。Linux是由Linus Torvalds在1991年为替代MINIX而研发的。一位当时名不见经传人物的努力掀起了澎湃巨浪，吸引了遍布全世界的很多软件开发者，在使用和不断增强Linux方面自愿贡献出了他们大量的时间。</p><p>Ubuntu 12.04 的 Linux 分发版本是用以测试本书实例的操作系统之一。该系统使用了 Linux操作系统3.2.0版内核。</p><h2 id="Mac-OS-X"><a href="#Mac-OS-X" class="headerlink" title="Mac OS X"></a>Mac OS X</h2><p>Mac OS X使用了完全不同的技术。其核心操作系统称为“Darwin”，它基于Mach内核（Accetta等[1986]）、FreeBSD操作系统以及具有面向对象框架的驱动和其他内核扩展的结合。Mac OS X 10.5的Intel部分已经被验证为是一个UNIX系统。</p><h2 id="文件描述符"><a href="#文件描述符" class="headerlink" title="文件描述符"></a>文件描述符</h2><p>对于内核而言，所有打开的文件都通过文件描述符引用。文件描述符是一个非负整数。当打开一个现有文件或创建一个新文件时，内核向进程返回一个文件描述符。当读、写一个文件时，使用open或creat返回的文件描述符标识该文件，将其作为参数传送给read或write。</p>]]></content>
      
      
      <categories>
          
          <category> UNIX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UNIX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始搭建博客</title>
      <link href="/2020/06/29/hello-world/"/>
      <url>/2020/06/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>是一个快速、简洁且高效的博客框架。Hexo支持对Markdown文章解析生成为靓丽主题的静态网页。并且Hexo博客支持一键部署GitHub Pages上。</p><a id="more"></a><h2 id="必备条件"><a href="#必备条件" class="headerlink" title="必备条件"></a>必备条件</h2><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>安装node.js</p>            </div> <div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>安装Git</p>            </div> <div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>安装Hexo</p>            </div> <div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>GitHub账号</p>            </div> <h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><span class='btn regular'><a href='https://hexo.io/zh-cn/docs/github-pages' target="_blank" rel="noopener" title='官网文档'><i class='fas fa-play-circle'></i>官网文档</a></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>安装过程中我遇到命令执行卡主问题，替换淘宝镜像解决</p><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>新建空文件夹作为博客的目录 我个人习惯博客目录路径~/blog</p><p>初始化并安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>启动本地服务访问博客</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="部署GitHub-Pages"><a href="#部署GitHub-Pages" class="headerlink" title="部署GitHub Pages"></a>部署GitHub Pages</h2><p>在个人GitHub创建博客仓库 仓库命名规则<span class='p red'>博客名</span>.github.io</p><p>安装hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt; #https:&#x2F;&#x2F;bitbucket.org&#x2F;JohnSmith&#x2F;johnsmith.bitbucket.io</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br></pre></td></tr></table></figure><p>生成hexo静态博客并部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><span class='btn regular'><a href='https://hexo.io/themes/' target="_blank" rel="noopener" title='官网主题'><i class='fas fa-play-circle'></i>官网主题</a></span><p>我个人当前使用主题 <span class='btn regular'><a href='https://volantis.js.org/v2/getting-started/' target="_blank" rel="noopener" title='Volantis'><i class='fas fa-play-circle'></i>Volantis</a></span></p><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a> –&gt;</p><!-- <div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div> -->]]></content>
      
      
      <categories>
          
          <category> 其它 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
