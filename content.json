{"meta":{"title":"iCoderHong","subtitle":"","description":"","author":"iCoderHong","url":"https://iCoderHong.github.io","root":"/"},"pages":[{"title":"关于","date":"2020-06-28T20:22:30.716Z","updated":"2020-06-28T20:22:30.716Z","comments":true,"path":"about/index.html","permalink":"https://icoderhong.github.io/about/index.html","excerpt":"","text":"Hello World"}],"posts":[{"title":"线程与进程","slug":"ios-thread","date":"2020-06-28T17:52:24.284Z","updated":"2020-07-02T08:20:32.549Z","comments":true,"path":"2020/06/29/ios-thread/","link":"","permalink":"https://icoderhong.github.io/2020/06/29/ios-thread/","excerpt":"每台计算机工作中三大核心硬件CPU、内存、硬盘。其中CPU运行速度最快、其次是内存、最慢的当属磁盘IO，三者一起协作完成任务就产生问题 CPU执行速度非常快，所以它的大部分时间都是在等内存和磁盘的IO完成工作","text":"每台计算机工作中三大核心硬件CPU、内存、硬盘。其中CPU运行速度最快、其次是内存、最慢的当属磁盘IO，三者一起协作完成任务就产生问题 CPU执行速度非常快，所以它的大部分时间都是在等内存和磁盘的IO完成工作 进程进程是对正在运行中的程序的一个抽象 同时进程是操作系统分配资源的最小单位 操作系统的其它所有内容都是围绕着进程展开的。即使可以使用的 CPU 只有一个，它们也支持（伪）并发操作。它们会将一个单独的 CPU 抽象为多个虚拟机的 CPU。 进程模型在进程模型中所有计算机上运行的软件，通常也包括操作系统，被组织为若干顺序进程(sequential processes)，简称为 进程(process) 。 一个进程就是一个正在执行的程序的实例，进程也包括程序计数器、寄存器和变量的当前值。从概念上来说，每个进程都有各自的虚拟 CPU，但是实际情况是 CPU 会在各个进程之间进行来回切换。 每个程序要运行时，其逻辑程序计数器会装载到物理程序计数器中。当程序运行结束后，然后再把它放回进程的逻辑计数器中。 CPU切换任务后，下次回来需要知道当前任务已经执行到了哪一步，所以对任务节点进行一个标记，回来的时候可以从上次标记的位置继续工作，而这个标记叫做程序计数器。 进程的实现操作系统为了执行进程间的切换，会维护着一张表格，这张表就是 进程表(process table)。 该表项包含了进程状态的重要信息，包括程序计数器、堆栈指针、内存分配状况、所打开文件的状态、账号和调度信息，以及其它在进程由运行态转换到就绪态或阻塞态时所必须保存的信息，从而保证该进程随后能再次启动，就像从未被中断过一样。 线程线程是CPU调度的最小单位 线程依赖于进程 进程默认有一个主线程 线程不像是进程那样具备较强的独立性。同一个进程中的所有线程都会有完全一样的地址空间，这意味着它们也共享同样的全局变量。由于每个线程都可以访问进程地址空间内每个内存地址，因此一个线程可以读取、写入甚至擦除另一个线程的堆栈。 经典的线程模型每个进程都有自己的地址空间和单个控制线程，每个线程都在不同的地址空间中运行 一个进程三个线程的情况。每个线程都在相同的地址空间中运行 文章参考 多线程发展史 线程与进程","categories":[{"name":"计算机基础","slug":"计算机基础","permalink":"https://icoderhong.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"}],"tags":[{"name":"多线程","slug":"多线程","permalink":"https://icoderhong.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"}]},{"title":"从零开始搭建博客","slug":"hello-world","date":"2020-06-28T17:52:24.284Z","updated":"2020-06-30T04:46:08.680Z","comments":true,"path":"2020/06/29/hello-world/","link":"","permalink":"https://icoderhong.github.io/2020/06/29/hello-world/","excerpt":"Hexo是一个快速、简洁且高效的博客框架。Hexo支持对Markdown文章解析生成为靓丽主题的静态网页。并且Hexo博客支持一键部署GitHub Pages上。","text":"Hexo是一个快速、简洁且高效的博客框架。Hexo支持对Markdown文章解析生成为靓丽主题的静态网页。并且Hexo博客支持一键部署GitHub Pages上。 必备条件 安装node.js 安装Git 安装Hexo GitHub账号 安装Hexo官网文档 1npm install -g hexo-cli 安装过程中我遇到命令执行卡主问题，替换淘宝镜像解决 建站新建空文件夹作为博客的目录 我个人习惯博客目录路径~/blog 初始化并安装依赖 12hexo initnpm install 启动本地服务访问博客 1hexo server 部署GitHub Pages在个人GitHub创建博客仓库 仓库命名规则博客名.github.io 安装hexo-deployer-git 1npm install hexo-deployer-git --save 修改配置 12345deploy: type: git repo: &lt;repository url&gt; #https:&#x2F;&#x2F;bitbucket.org&#x2F;JohnSmith&#x2F;johnsmith.bitbucket.io branch: [branch] message: [message] 生成hexo静态博客并部署 1hexo g -d 主题官网主题 我个人当前使用主题 Volantis More info: Deployment –&gt;","categories":[{"name":"其它","slug":"其它","permalink":"https://icoderhong.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://icoderhong.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"计算机基础","slug":"计算机基础","permalink":"https://icoderhong.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"},{"name":"其它","slug":"其它","permalink":"https://icoderhong.github.io/categories/%E5%85%B6%E5%AE%83/"}],"tags":[{"name":"多线程","slug":"多线程","permalink":"https://icoderhong.github.io/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"},{"name":"博客","slug":"博客","permalink":"https://icoderhong.github.io/tags/%E5%8D%9A%E5%AE%A2/"}]}